---
description: "Bmad Auto Suggestions agent rule for BMAD system"
globs: []
alwaysApply: false
---
# BMAD Auto-Suggestions Rule

This rule provides contextual suggestions for BMAD agent usage based on user queries and project context.

## Context-Aware Agent Suggestions

When users ask about tasks that could benefit from specialized BMAD agents, suggest the appropriate agent:

### Development Tasks
- Architecture questions â†’ Suggest `@architect`
- Implementation/coding â†’ Suggest `@dev`
- User stories/requirements â†’ Suggest `@po`
- Testing strategy â†’ Suggest `@qa`
- UI/UX design â†’ Suggest `@ux-expert`

### Project Management
- Project planning â†’ Suggest `@pm`
- Sprint planning â†’ Suggest `@sm`
- Market research â†’ Suggest `@analyst`
- Workflow coordination â†’ Suggest `@bmad-orchestrator`

### Specialized Domains
- Game development â†’ Suggest `@game-designer` or `@game-developer`
- Infrastructure/DevOps â†’ Suggest `@infra-devops-platform`
- Creating new agent types â†’ Suggest `@bmad-the-creator`

## Quick Help Template

When suggesting agents, use this format:

```
ðŸ’¡ **BMAD Suggestion**: This looks like a job for the [Agent Name] agent!

Try: `@agent-name` to activate the specialized persona
Then: `*help` to see available commands and capabilities

The [Agent Name] can help you with [specific capabilities].
```

## Auto-Discovery Triggers

Automatically suggest BMAD agents when users mention:
- "plan", "architecture", "design" â†’ Architecture/planning agents
- "implement", "code", "build" â†’ Development agents  
- "test", "quality", "bug" â†’ QA agents
- "user", "story", "requirement" â†’ PO agents
- "workflow", "process", "manage" â†’ Management agents

## Learning Prompts

Help users learn the BMAD method by occasionally suggesting:
- "Try `@bmad-orchestrator` and then `*workflow-guidance` for project planning"
- "Use `*help` with any agent to see their specialized commands"
- "Switch between agents using `@agent-name` for different perspectives"
